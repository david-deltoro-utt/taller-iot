# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'WindowAdafruit.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from adafruitMQTT import  AdafruitMQTT
from adafruitAPI import AdafruitAPI


class Ui_MainWindow(AdafruitMQTT):
    def __init__(self): 
        super().__init__()
        self.name_feeds=["led","ultrasonico"]
        self.banderaled=False

    def cambiar_led(self):
        print("cambiar_led")
        self.banderaled=not self.banderaled
        valor =  1 if self.banderaled else 0
        self.client.publish('led', valor)
        self.cambiar_color()
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(130, 260, 151, 81))
        self.lcdNumber.setObjectName("lcdNumber")
        self.btnLed = QtWidgets.QPushButton(self.centralwidget)
        self.btnLed.setGeometry(QtCore.QRect(150, 180, 61, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnLed.setFont(font)
        self.btnLed.setAutoFillBackground(False)
        self.btnLed.setObjectName("btnLed")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(70, 300, 47, 13))
        self.label.setObjectName("label")

        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.btnLed.setStyleSheet('color: white')
        
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.btnLed.clicked.connect(self.cambiar_led)

        self.api=AdafruitAPI()
        try:
            self.feed_led=self.api.getFeed("led")
            data = self.api.aio.receive(self.feed_led.key)
            print("data:",data.value,type(data.value))
            self.banderaled= data.value!='1'
            self.cambiar_led()     

            self.feed_led=self.api.getFeed("ultrasonico")
            data = self.api.aio.receive(self.feed_led.key)
            self.lcdNumber.display(data.value)


        except Exception as e:
            raise e
        
        
   
        #self.mqtt=AdafruitMQTT(["feed","test"])     
        self.connect_component()
        self.client.loop_background()
        
        
    def cambiar_color(self):
        if self.banderaled:
            #self.btnLed.setStyleSheet('color: white')
            self.btnLed.setStyleSheet("background-color : red")
        else :
            #self.btnLed.setStyleSheet('color: white')
            self.btnLed.setStyleSheet("background-color : black")
        
    def message(self,client, feed_id, payload):
            # Message function will be called when a subscribed feed has a new value.
            # The feed_id parameter identifies the feed, and the payload parameter has
            # the new value.
            print('Feed {0} received exist: {1}'.format(feed_id, feed_id in ['led']))
            print('Feed {0} received new value: {1}'.format(feed_id, payload))

            if ( feed_id in ['ultrasonico']):
                self.lcdNumber.display(payload)
            elif ( feed_id in ['led'] ):
                self.banderaled=payload == '1' 
                self.cambiar_color()                     
            
                            
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btnLed.setText(_translate("MainWindow", "LED"))
        self.label.setText(_translate("MainWindow", "Sensor:"))
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
